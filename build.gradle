plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	// id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'net.nurigo:javaSDK:2.2'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'junit:junit:4.12'
	implementation 'org.projectlombok:lombok:1.18.20'

	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	implementation 'com.querydsl:querydsl-core:5.0.0'
	implementation 'com.querydsl:querydsl-apt:5.0.0'
	implementation "org.redisson:redisson-spring-boot-starter:3.21.1"

	implementation 'jakarta.persistence:jakarta.persistence-api'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	runtimeOnly 'com.mysql:mysql-connector-j'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	//annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa' // JPA 사용 시


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

/**
 * Querydls 설정 부분
 */

def generated = "src/main/generated"

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
	options.annotationProcessorGeneratedSourcesDirectory(file(generated))
}


sourceSets {
	main.java.srcDir generated
}

clean {
	delete file(generated)
}